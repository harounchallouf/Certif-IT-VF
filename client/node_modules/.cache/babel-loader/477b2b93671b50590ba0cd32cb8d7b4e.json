{"ast":null,"code":"import _classCallCheck from\"C:/Users/Lenovo/Desktop/project-3-master/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import runtimeEnv from\"@mars/heroku-js-runtime-env\";import axios from'axios';var env=runtimeEnv();var AuthService=function AuthService(){var _this=this;_classCallCheck(this,AuthService);this.signup=function(credentials){return _this.apiHandler.post('/signup',credentials);};this.login=function(credentials){return _this.apiHandler.post('/login',credentials);};this.logout=function(){return _this.apiHandler.post('/logout');};this.isLoggedIn=function(){return _this.apiHandler.get('/loggedin');};this.apiHandler=axios.create({baseURL:\"\".concat(env.REACT_APP_API_URL),withCredentials:true});};export{AuthService as default};","map":{"version":3,"sources":["C:/Users/Lenovo/Desktop/project-3-master/client/src/service/auth.service.js"],"names":["runtimeEnv","axios","env","AuthService","signup","credentials","apiHandler","post","login","logout","isLoggedIn","get","create","baseURL","REACT_APP_API_URL","withCredentials"],"mappings":"wKAAA,MAAOA,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,GAAG,CAAGF,UAAU,EAAtB,C,GAEqBG,CAAAA,W,CAEjB,sBAAc,uDAOdC,MAPc,CAOL,SAAAC,WAAW,QAAI,CAAA,KAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqB,SAArB,CAAgCF,WAAhC,CAAJ,EAPN,MAQdG,KARc,CAQN,SAAAH,WAAW,QAAI,CAAA,KAAI,CAACC,UAAL,CAAgBC,IAAhB,CAAqB,QAArB,CAA+BF,WAA/B,CAAJ,EARL,MASdI,MATc,CASL,iBAAM,CAAA,KAAI,CAACH,UAAL,CAAgBC,IAAhB,CAAqB,SAArB,CAAN,EATK,MAUdG,UAVc,CAUD,iBAAM,CAAA,KAAI,CAACJ,UAAL,CAAgBK,GAAhB,CAAoB,WAApB,CAAN,EAVC,CACV,KAAKL,UAAL,CAAkBL,KAAK,CAACW,MAAN,CAAa,CAC3BC,OAAO,WAAMX,GAAG,CAACY,iBAAV,CADoB,CAE3BC,eAAe,CAAE,IAFU,CAAb,CAAlB,CAIH,C,QAPgBZ,W","sourcesContent":["import runtimeEnv from \"@mars/heroku-js-runtime-env\";\nimport axios from 'axios'\n\nconst env = runtimeEnv()\n\nexport default class AuthService {\n\n    constructor() {\n        this.apiHandler = axios.create({\n            baseURL: `${ env.REACT_APP_API_URL }`,\n            withCredentials: true\n        })\n    }\n\n    signup = credentials => this.apiHandler.post('/signup', credentials)\n    login = credentials => this.apiHandler.post('/login', credentials)\n    logout = () => this.apiHandler.post('/logout')\n    isLoggedIn = () => this.apiHandler.get('/loggedin')\n}"]},"metadata":{},"sourceType":"module"}